buildscript {
    repositories {
        jcenter()
	mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath "com.novoda:gradle-android-command-plugin:1.3.0"
        classpath "jp.leafytree.gradle:gradle-android-scala-plugin:1.3.1"
        classpath "net.coacoas.gradle:gradle-ensime:0.1.11"
    }
}

apply plugin: "com.android.application"
apply plugin: "jp.leafytree.android-scala"
apply plugin: "android-command"
apply plugin: "ensime"

ext {
    scalaLibraryVersion = "2.11.6"
    androidMinCompatVersion = 11
    androidSdkVersion = 21
    androidSupportVersion = androidSdkVersion + ".0.2"
    androidToolVersion = androidSdkVersion + ".1.1"
}

ensime {
    javaHome = "/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home"
    scalaVersion = scalaLibraryVersion
}

repositories {
    jcenter()
}

dependencies {
    compile "com.android.support:support-v4:${androidSupportVersion}"
    compile "com.android.support:gridlayout-v7:${androidSupportVersion}"
    compile "com.android.support:cardview-v7:${androidSupportVersion}"

    compile "org.scala-lang:scala-library:${scalaLibraryVersion}"
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'  // boilerplate code that is generated by the sample template process
]

android {
    compileSdkVersion androidSdkVersion
    buildToolsVersion "${androidToolVersion}"

    defaultConfig {
        minSdkVersion androidMinCompatVersion
        targetSdkVersion androidSdkVersion
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                scala.srcDirs "src/${dir}/scala"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot("tests")
        androidTest.java.srcDirs = ["tests/src"]
    }

    lintOptions {
        absolutePaths false
        lintConfig file("lint.xml")
    }
}
